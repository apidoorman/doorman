name: Performance Regression

permissions:
  contents: read

on:
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      base_url:
        description: 'Target base URL (e.g., https://staging.example.com)'
        required: false
        type: string
      bless_baseline:
        description: 'Upload current run as new baseline artifact'
        required: false
        type: boolean

jobs:
  perf:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup k6
        uses: grafana/setup-k6-action@v1

      - name: Resolve target URL
        id: target
        run: |
          URL="${{ inputs.base_url }}"
          if [ -z "$URL" ]; then
            URL="${{ secrets.PERF_TARGET_URL }}"
          fi
          if [ -z "$URL" ]; then
            # Default to local instance if no URL provided
            echo "::notice::No external URL provided, will start Doorman locally"
            URL="http://localhost:8000"
            echo "start_local=true" >> $GITHUB_OUTPUT
          else
            echo "start_local=false" >> $GITHUB_OUTPUT
          fi
          echo "base_url=$URL" >> $GITHUB_OUTPUT

      - name: Setup Python (for local instance)
        if: ${{ steps.target.outputs.start_local == 'true' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies (for local instance)
        if: ${{ steps.target.outputs.start_local == 'true' }}
        run: |
          python -m pip install --upgrade pip
          pip install -r backend-services/requirements.txt

      - name: Start Doorman locally
        if: ${{ steps.target.outputs.start_local == 'true' }}
        env:
          PORT: '8000'
          THREADS: '1'
          ENV: 'development'
          MEM_OR_EXTERNAL: 'MEM'
          DOORMAN_ADMIN_PASSWORD: 'local-dev-admin-pass'
          JWT_SECRET_KEY: 'local-dev-jwt-secret-key-please-change'
          ALLOWED_ORIGINS: 'http://localhost:3000'
        run: |
          # Use PID-supervised mode so scripts can find backend-services/doorman.pid
          python backend-services/doorman.py start
          # Wait for liveness
          for i in {1..60}; do
            if curl -fsS http://localhost:8000/platform/monitor/liveness > /dev/null 2>&1; then
              echo "Doorman is live"; break
            fi
            sleep 1
          done

      - name: Run k6 load test
        env:
          BASE_URL: ${{ steps.target.outputs.base_url }}
          TEST_PASSWORD: ${{ steps.target.outputs.start_local == 'true' && 'local-dev-admin-pass' || secrets.TEST_PASSWORD }}
        run: |
          k6 run --summary-export load-tests/k6-summary.json load-tests/k6-load-test.js

      - name: Collect optional server stats (CPU/event-loop)
        if: ${{ env.PERF_STATS_URL != '' }}
        env:
          PERF_STATS_URL: ${{ secrets.PERF_STATS_URL }}
        run: |
          set -e
          if [ -n "$PERF_STATS_URL" ]; then
            curl -fsSL "$PERF_STATS_URL" -o load-tests/perf-stats.json || echo '{}' > load-tests/perf-stats.json
          fi

      - name: Upload perf summary artifact
        uses: actions/upload-artifact@v4
        with:
          name: perf-summary
          path: |
            load-tests/k6-summary.json
            load-tests/perf-stats.json
          if-no-files-found: error

      - name: Maybe bless new baseline
        if: ${{ inputs.bless_baseline == true }}
        uses: actions/upload-artifact@v4
        with:
          name: perf-baseline
          path: |
            load-tests/k6-summary.json
            load-tests/perf-stats.json
          if-no-files-found: error

      - name: Download baseline artifact from default branch
        if: ${{ inputs.bless_baseline != true }}
        uses: dawidd6/action-download-artifact@v3
        with:
          name: perf-baseline
          path: baseline
          workflow: perf-regression.yml
          branch: ${{ github.event.repository.default_branch }}
          if_no_artifact_found: warn

      - name: Setup Python
        if: ${{ inputs.bless_baseline != true }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Compare against baseline
        if: ${{ inputs.bless_baseline != true }}
        run: |
          python3 scripts/compare_perf.py load-tests/k6-summary.json baseline/k6-summary.json
