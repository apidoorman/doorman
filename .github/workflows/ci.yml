name: CI

permissions:
  contents: read

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend-services/requirements.txt
      - name: Run backend-services unit tests
        env:
          MEM_OR_EXTERNAL: MEM
          HTTPS_ONLY: 'false'
          HTTPS_ENABLED: 'false'
          STRICT_RESPONSE_ENVELOPE: 'false'
          JWT_SECRET_KEY: test-secret-key-please-change
          DOORMAN_ADMIN_EMAIL: admin@doorman.dev
          DOORMAN_ADMIN_PASSWORD: test-only-password-12chars
          MEM_ENCRYPTION_KEY: unit-test-key-32chars-abcdef123456!!
          ALLOWED_HEADERS: '*'
          ALLOW_HEADERS: '*'
          ALLOW_METHODS: '*'
          ALLOWED_ORIGINS: http://localhost:3000
        working-directory: backend-services
        run: pytest -q tests
      - name: Start Doorman server for live-tests
        env:
          PORT: '3001'
          THREADS: '1'
          ENV: 'development'
          MEM_OR_EXTERNAL: MEM
          HTTPS_ONLY: 'false'
          HTTPS_ENABLED: 'false'
          STRICT_RESPONSE_ENVELOPE: 'false'
          JWT_SECRET_KEY: test-secret-key-please-change
          DOORMAN_ADMIN_EMAIL: admin@doorman.dev
          DOORMAN_ADMIN_PASSWORD: test-only-password-12chars
          MEM_ENCRYPTION_KEY: unit-test-key-32chars-abcdef123456!!
          ALLOWED_HEADERS: '*'
          ALLOW_HEADERS: '*'
          ALLOW_METHODS: '*'
          ALLOWED_ORIGINS: http://localhost:3000
        run: |
          python backend-services/doorman.py start
          for i in {1..60}; do
            if curl -fsS http://localhost:3001/platform/monitor/liveness > /dev/null 2>&1; then
              echo "Doorman is live"; break
            fi
            sleep 1
          done
      - name: Run backend-services live-tests
        env:
          LIVE_BASE_URL: http://localhost:3001
          LIVE_ADMIN_EMAIL: admin@doorman.dev
          LIVE_ADMIN_PASSWORD: test-only-password-12chars
        working-directory: backend-services
        run: pytest -q live-tests
      - name: Stop Doorman server
        if: always()
        run: |
          if [ -f backend-services/doorman.pid ]; then
            kill $(cat backend-services/doorman.pid) || true
          fi

  frontend-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web-client/package-lock.json
      - name: Install dependencies
        working-directory: web-client
        run: npm ci
      - name: Build web client
        working-directory: web-client
        env:
          NEXT_PUBLIC_SERVER_URL: http://localhost:3001
        run: npm run build
